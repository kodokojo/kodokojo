#%RAML 0.8
---
title: Kodo Kojo API
baseUri: /api/{version}
mediaType: application/json
securitySchemes:
  - basic:
      type: Basic Authentication
version: v1
schemas:
  - identifier: |
      {
        "type": "string",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/identifier",
        "required": true
      }
  - identifiers: |
      {
        "type": "array",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/identifiers",
        "items": {
          "id": "http://kodokojo.io/identifier",
          "type": "string"
        },
        "required": true
      }
  - userCreation: !include userCreation.schemas.json
  - userCreated: !include userCreated.schemas.json
  - user: !include user.schemas.json
  - project: !include project.schemas.json
  - projectCreation: !include projectCreation.schemas.json
  - projectConfiguration: !include projectConfiguration.schemas.json
  - brickConfiguration: !include brickConfiguration.schemas.json
/user:
  post:
    description: Allow to obtain a temporary identifier which may use _post_ to create a new user.
    responses:
      200:
        body:
          application/json:
            schema: identifier
            example: 05cf926099cecfb17403ef764c9bff1bec8e9d7b
  get:
    description: Get current User details
    securedBy: [basic]
    responses:
      200:
        description:
          Return user details without password and private RSA key.
        body:
          application/json:
            schema: user
            example: |
              {
                "identifier": "05cf926099cecfb17403ef764c9bff1bec8e9d7b",
                "entityIdentifier": "15c850471f3add8a0dd937fda85ef0fe27519481",
                "firstName": "jpthiery",
                "lastName": "jpthiery",
                "name": "jpthiery jpthiery",
                "username": "jpthiery",
                "email": "jpthiery@xebia.fr",
                "password": "h8kiu45qb8iq4p820iqs4q54is",
                "sshPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYji20blJoetQ7BLDEeRzmf3i49fQDCGSWrTF/i8ANiJufVOs7Q8Ce4+JXuTmQD4Kol7LaKmc7ObhZN8w7PrAd2HM8PqQQaVIww+hlmTXJDWpSMwl5+RyT/wWzO8n+F+F3ZiAL+IqqkAn3G5Q4Aw7lN65geceD57yrMJ9C3xedafHDHEQIuD34ACCbhp53ZXFpBMryDrRmMiYhUloxN0iYcgeYzG3AxXEYLaxp4hr74rEeJ1CRYArE/Z8cT3iyQ4/+oAZHfWq9Mc8ZKHMLz3lK3IkhDNE2Y4eFE/n1YEaw0h/uwCfo0mR6LX8pt7mJmHEjbdf8rHVXH4N4BZ7szMfp jpthiery@xebia.fr",
                "projectConfigurationIds": [
                  {
                    "projectConfigurationId": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                    "projectId": "b1392a68c1ea01d1e445f9464351f67af86c5e14"
                  }
                ]
              }
      404:
        description:
          User not found with the given identifier
      401:
        description:
          A valid authentification is requiered.
  /{identifier}:
    post:
      description: Create a user with given identifier
      body:
        application/json:
          schema: userCreation
          example: |
            {
              "email": "jpthiery@xebia.fr"
            }
      responses:
        201:
          description:
            Return created user with password and private RSA key.
          headers:
            Location:
              description: |
                The location to acces to defail of created User.
              type: string
              example: |
                /user/59e860b31588a0a1f2ae3fa75764ce133a6985e3
          body:
            application/json:
              schema: userCreated
              example: |
                {
                  "identifier":"59e860b31588a0a1f2ae3fa75764ce133a6985e3",
                  "name":"jpthiery",
                  "username":"jpthiery",
                  "email":"jpthiery@xebia.fr",
                  "password":"e0k4208ac3huk2g5fuutbvrd3e",
                  "privateKey":"-----BEGIN RSA PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCIiTddCskXUNi7\nRCcgnZGGcfqskOmLeL2pQc7W9wXrsbBDJz74J78LKWT+HvMVj+A8fKEVzh3Ftc6I\nlQFyQClXXnuhFY+nyoy9HDKxAw1SyesqE21Sb++ih7mOFU7UMGv2UCfKxVvOPFxR\n2Okjyar6CES9jG6u6quorwaBu9mUty0vej61PAQL65Txd8BTaGlKCTNEXLSFmvnp\npBIRvNBCRxgzJnRDly/afedmw+5KGXTxXZMSexGa9oe9fszCzvg0y8o17HUs/sW4\nOcZUeKHHplVTR+urZx7rSL6KjJ/hAH9TXlAx6JcIwrdHrVxz2SRTpLPWZQm5qzlb\n5OOqvFr1AgMBAAECggEAVCkorDxyueGGxt/6slsOEe5+ExL8MpGJbyR2aAE6cA9G\nVA6D/Rka5LluXEodksPt97rm3HcB2RX5Ki2XB6LPGODPmfqdY1MyL3uLL5tvAgIe\n5/+zmmYPM4Mv+Inf3mG+msTL0myW62g/i+AFzZ6IuriQDrramw1iJIdGnn95XfYe\nnT7Yk4I6JmaAu+DpbEGIZV2WoNXJnXK2EXFXzxkaMmdKjbsE0SBQCLUDaVZmn9bx\nBF51LL3a2aYTvFpb0ER6dWWSWIc9FLVzz10dEDDWvJoU6Z+SwS6/UUv/EJpp+DFy\nZDAajzYqZy6KficP8RoCEnPGHQAPgAo+siETK6qj3QKBgQD78/FQ0awQubWKOEH4\nOyz5sSUgtz17ZYDw3t3sX70o3tvEQxKZdWwCdqlI88eKYcCn3DcKAmJmhtJlVjRX\nKYkQQ43csDXfOHXen5MvU9svWVvZOIW7XAraZRsBeWLvhsCIdN+usE+YNAJ3s6SH\n4UJehmIjPnZTKkIM8vcMBn63pwKBgQCKuqq9JEPwZu+FkNnvoXtAtar0yH98vAYq\nTFkG7QXjQHRQbUns/e47e8p0Fvjq8yRHtCBfTnJqvCAlWpWY7JKMd5AfJ2T3YdcR\nTxSjJhFkIAxB60piI+QbTq0jLEn5CQfosGH7gPjVerA672L83OXtpyZPd+9x72AO\nWcJuaMSsAwKBgQCji9TP/lpvvOyfnScNZ/Qo3JlaJDfvmpLZSAHMRtU163vCaTtw\ni60h6D640S1soUl6bNL5V1Tico+uIgf1sEt9WCyE3YkKrc6tRO44oXk8wgeB+FOu\nq++LlmeyTEYxb0oZCayM63uvM8uKQf0CCvGXBCo98HTERUD8wNYmYyzsLwKBgQCC\npJlnd0B3oyhLOwbRcNvWK36r+Ch+ub6AlNd9+zYBNVCT8OeeQ9/WqpQUURHmiESR\nNeMKfaCoPTN0meKpWZgEqg/SFtIxWTUkurkvjwjvpnKEnWS2GSCWSrgnmGytFkEZ\ncwlCxMkQmPJe/dLVV907uZ4NVl/qhseJnCPKv+T+KwKBgQDLVeG47p69g5nLBR2K\nyO8CUXInsucTtjEx3d1GeHoooC/UjOLo8+aZ2DdGgRSbfjnPZQ7dNG8uZRDAiHjv\nW9ul87GGI4lGqbpzlVsSk8h5STeKWXcIbrnEOPBt6iRBSFT/7VdQIBQstJ/3qm05\nn57rpPmkEe4QCTx6MtLxzjRLPg\u003d\u003d\n-----END RSA PRIVATE KEY-----\n",
                  "sshPublicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCIiTddCskXUNi7RCcgnZGGcfqskOmLeL2pQc7W9wXrsbBDJz74J78LKWT+HvMVj+A8fKEVzh3Ftc6IlQFyQClXXnuhFY+nyoy9HDKxAw1SyesqE21Sb++ih7mOFU7UMGv2UCfKxVvOPFxR2Okjyar6CES9jG6u6quorwaBu9mUty0vej61PAQL65Txd8BTaGlKCTNEXLSFmvnppBIRvNBCRxgzJnRDly/afedmw+5KGXTxXZMSexGa9oe9fszCzvg0y8o17HUs/sW4OcZUeKHHplVTR+urZx7rSL6KjJ/hAH9TXlAx6JcIwrdHrVxz2SRTpLPWZQm5qzlb5OOqvFr1 jpthiery@xebia.fr"
                }
        428:
          description:
            Enable to create the user due to a error while processing creation of the user. May be due to a bad identifier.
        409:
          description:
            The username already exist.
        412:
          description:
            Identifier not valid.

    get:
      description: Get User details
      securedBy: [basic]
      responses:
        200:
          description:
            Return user details without password and private RSA key.
          body:
            application/json:
              schema: user
              example: |
                {
                  "identifier": "05cf926099cecfb17403ef764c9bff1bec8e9d7b",
                  "entityIdentifier": "15c850471f3add8a0dd937fda85ef0fe27519481",
                  "firstName": "jpthiery",
                  "lastName": "jpthiery",
                  "name": "jpthiery jpthiery",
                  "username": "jpthiery",
                  "email": "jpthiery@xebia.fr",
                  "password": "",
                  "sshPublicKey": "",
                  "projectConfigurationIds": [
                    {
                      "projectConfigurationId": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                      "projectId": "b1392a68c1ea01d1e445f9464351f67af86c5e14"
                    }
                  ]
                }
        404:
          description:
            User not found with the given identifier
        403:
          description:
            This user details can't be visible. You may not been in same entity group.
/projectconfig:
  post:
    description: Create a Project configuration with a default stack.
    securedBy: [basic]
    body:
      application/json:
        schema: projectCreation
        example: |
          {
            "name": "Acme",
            "ownerIdentifier": "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
            "userIdentifiers": [
              "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
            ]
          }
    responses:
      201:
        description:
          Return project configuration Id.
        headers:
          Location:
            description: |
                The location to acces to defail of project configuration.
            type: string
            example: |
              /projectconfig/50e860b31588a0a1f2ae3fa75764ce133a6a267
        body:
          application/json:
            schema: identifier
            example: |
              59e860b31588a0a1f2ae3fa75764ce133a6985e3
  /{identifier}:
    get:
      description: Get projectConfiguration details.
      securedBy: [basic]
      responses:
        200:
          description: Return a project configuration detail.
          body:
            application/json:
              schema: projectConfiguration
              example: !include projectConfiguration.sample.json
        401:
          description: Authentification requiered.
        403:
          description: Your are not the admins of the project.
        404:
          description: Project configuration not found.
    /user:
      put:
        description: Add a list of new User to a given project.
        securedBy: [basic]
        body:
          application/json:
            schema: identifiers
            example: |
              [
                "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
                "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
              ]
        responses:
          200:
            description:
              All user identifiers had been added to the project.
          401:
            description:
              Authentification requiered.
          403:
            description:
              Your are not admins of project.
          404:
            description:
              Project configuration not found.
      delete:
        description: Delete a list of User to a given project.
        securedBy: [basic]
        body:
          application/json:
            schema: identifiers
            example: |
              [
                "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
                "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
              ]
        responses:
          200:
            description:
              All user identifiers had been deleted to the project.
          401:
            description:
              Authentification requiered.
          403:
            description:
              Your are not admins of project.
          404:
            description:
              Project configuration not found.
/project:
  /{projectConfigurationIdentifier}:
    post:
      description: Create and Starct a Project with given Project configuration
      securedBy: [basic]
      body:
        application/json:
          schema: identifier
          example: |
            "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
      responses:
        201:
          description:
            Return project Id.
          headers:
            Location:
              description: |
                  The location to acces to defail of project.
              type: string
              example: |
                /project/50e860b31588a0a1f2ae3fa75764ce133a6a267
          body:
            application/json:
              schema: identifier
              example: |
                59e860b31588a0a1f2ae3fa75764ce133a6985e3
        403:
          description: You are not the admins of the project.
        404:
          description: Project configuration not found.
        409:
          description: Project already exist
  /{projectIdentifier}:
    get:
      description: Get project state details
      securedBy: [basic]
      body:
        application/json:
          schema: identifier
          example: |
            b1392a68c1ea01d1e445f9464351f67af86c5e14
      responses:
        201:
          description:
            Return project Detail.
          body:
            application/json:
              schema: project
              example: |
                {
                  "identifier": "b1392a68c1ea01d1e445f9464351f67af86c5e14",
                  "projectConfigurationIdentifier": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                  "name": "jpascal",
                  "snapshotDate": "May 16, 2016 1:31:26 PM",
                  "stacks": [
                    {
                      "name": "build-A",
                      "stackType": "BUILD",
                      "brickStates": [
                        {
                          "projectConfigurationIdentifier": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                          "brickType": "CI",
                          "stackName": "build-A",
                          "brickName": "jenkins",
                          "state": "RUNNING",
                          "version": "1.651",
                          "url": "https://ci-jpascal.kodokojo.io"
                        },
                        {
                          "projectConfigurationIdentifier": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                          "brickType": "REPOSITORY",
                          "stackName": "build-A",
                          "brickName": "nexus",
                          "state": "RUNNING",
                          "version": "2",
                          "url": "https://repository-jpascal.kodokojo.io"
                        },
                        {
                          "projectConfigurationIdentifier": "1e25e0ca2fc382f332be16f1342d152eacedb434",
                          "brickType": "SCM",
                          "stackName": "build-A",
                          "brickName": "gitlab",
                          "state": "ONFAILURE",
                          "version": "8.5.2-ce",
                          "url": "https://scm-jpascal.kodokojo.io"
                        }
                      ]
                    }
                  ]
                }
        403:
          description: You are not the admins of the project.
        404:
          description: Project configuration not found.
/brick:
  get:
    description: Get list of available bricks
    securedBy: [basic]
    responses:
      200:
        body:
          application/json:
            schema: brickConfiguration
            example: |
              [
                {
                  "name": "nexus",
                  "type": "REPOSITORY",
                  "version": "2.13"
                },
                {
                  "name": "dockerregistry",
                  "type": "REPOSITORY",
                  "version": "2"
                },
                {
                  "name": "jenkins",
                  "type": "CI",
                  "version": "1.651"
                },
                {
                  "name": "haproxy",
                  "type": "LOADBALANCER",
                  "version": "1.6"
                },
                {
                  "name": "gitlab",
                  "type": "SCM",
                  "version": "8.5.2-ce"
                }
              ]