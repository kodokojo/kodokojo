<?xml version='1.0' encoding='UTF-8'?>
<!--

    Kodo Kojo - Software factory done right
    Copyright Â© 2016 Kodo Kojo (infos@kodokojo.io)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<flow-definition plugin="workflow-job@2.2">
    <actions/>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <jenkins.model.BuildDiscarderProperty>
            <strategy class="hudson.tasks.LogRotator">
                <daysToKeep>-1</daysToKeep>
                <numToKeep>5</numToKeep>
                <artifactDaysToKeep>-1</artifactDaysToKeep>
                <artifactNumToKeep>-1</artifactNumToKeep>
            </strategy>
        </jenkins.model.BuildDiscarderProperty>
    </properties>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.4">
        <script>
            def build(projectName) {
            ws(&quot;${projectName}/workspace&quot;) {
            git credentialsId: &apos;github&apos;, url: &quot;https://github.com/kodokojo/${projectName}.git&quot;
            sh &apos;&apos;&apos;containerId=$(docker create -w /usr/src/workspace/ -e &quot;DOCKER_HOST=unix:///var/run/docker.sock&quot; -e &quot;DOCKER_HOST_IP=192.168.99.100&quot; -v /var/run/docker.sock:/var/run/docker.sock:rw -v /tmp/kodokojo/.m2:/root/.m2:rw maven:3-jdk-8 mvn install)
            docker cp $(pwd)/ $containerId:/usr/src/
            docker start -a $containerId
            docker cp $containerId:/usr/src/workspace/target/ $PWD/target
            docker rm $containerId&apos;&apos;&apos;
            }

            }

            def branches = [:]
            branches[&apos;front&apos;] = {
            node() {
            ws(&quot;kodokojo-ui/workspace&quot;) {
            git credentialsId: &apos;github&apos;, url: &quot;https://github.com/kodokojo/kodokojo-ui.git&quot;
            sh &apos;&apos;&apos;docker build -t=&quot;kodokojo/kodokojo-ui:builder&quot; docker/builder/&apos;&apos;&apos;
            sh &apos;&apos;&apos;containerId=$(docker create  -e &quot;KODOKOJO_UI_VERSION=0.1.0&quot; kodokojo/kodokojo-ui:builder)
            docker cp $PWD/. $containerId:/src/
            docker start -a $containerId
            docker cp $containerId:/target/. $PWD/docker/delivery/
            docker rm $containerId
            cd $PWD/docker/delivery
            mkdir -p static || true
            tar zxvf kodokojo-ui-0.1.0.tar.gz -C static
            cd ../..
            docker build --no-cache -t=&quot;kodokojo/kodokojo-ui&quot; docker/delivery
            &apos;&apos;&apos;

            }
            }
            }

            branches[&apos;back&apos;] = {
            node() {
            build(&apos;commons-tests&apos;)
            build(&apos;commons&apos;)
            ws(&quot;kodokojo/workspace&quot;) {
            git credentialsId: &apos;github&apos;, url: &quot;https://github.com/kodokojo/kodokojo.git&quot;
            sh &apos;&apos;&apos;containerId=$(docker create -w /usr/src/workspace/ -e &quot;DOCKER_HOST=unix:///var/run/docker.sock&quot; -e &quot;DOCKER_HOST_IP=192.168.99.100&quot; -v /var/run/docker.sock:/var/run/docker.sock:rw -v /tmp/kodokojo/.m2:/root/.m2:rw maven:3-jdk-8 mvn -Dmaven.test.skip=true install)
            docker cp $(pwd)/ $containerId:/usr/src/
            docker start -a $containerId
            docker cp $containerId:/usr/src/workspace/target/. $PWD/target
            docker rm $containerId
            cp $PWD/target/kodokojo-*-SNAPSHOT-runnable.jar $PWD/src/main/docker/local/kodokojo.jar
            docker build -t=&quot;kodokojo/kodokojo&quot; $PWD/src/main/docker/local/
            &apos;&apos;&apos;
            }
            }
            }

            stage concurrency: 2, name: &apos;build docker images&apos;
            parallel branches

            stage &apos;push docker images&apos;
            node() {

            input &apos;Push docker image to Docker Hub ?&apos;
            sh &apos;&apos;&apos;docker push kodokojo/kodokojo-ui&apos;&apos;&apos;
            sh &apos;&apos;&apos;docker push kodokojo/kodokojo&apos;&apos;&apos;
            }

        </script>
        <sandbox>true</sandbox>
    </definition>
    <triggers/>
</flow-definition>